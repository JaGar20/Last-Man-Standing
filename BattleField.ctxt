#BlueJ class context
comment0.target=BattleField
comment0.text=\r\n\ The\ class\ is\ what\ makes\ this\ games.\ The\ timer,\r\n\ score,\ background,\ banner.\ All\ of\ this\ that\ are\ mention\ are\ created\ in\ this\r\n\ class.\ \r\n\ \r\n\ @author\ jasoneg@email.uscb.edu\r\n\ @version\ 2023.12.15\ (Final\ Project\ ISATB145)\r\n
comment1.params=
comment1.target=BattleField()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ BattleField.\r\n
comment10.params=
comment10.target=void\ stopped()
comment10.text=\r\n\ The\ music\ pauses\ when\ the\ user\ pause\ the\ game.\r\n
comment11.params=
comment11.target=void\ started()
comment11.text=\r\n\ The\ music\ resumes\ when\ the\ user\ play\ the\ game\ after\ pausing.\r\n
comment12.params=
comment12.target=void\ beginGameOverSequence()
comment12.text=\r\n\ When\ the\ user\ the\ game,\ this\ method\ displays\ a\ image\ to\ indicate\ that\ you\ lose.\r\n\ casting\ from\ another\ class\ that\ has\ the\ image\ and\ bring\ to\ here\ when\ is\ called.\r\n
comment13.params=
comment13.target=void\ beginNextLvlSequence()
comment13.text=\r\n\ When\ the\ user\ the\ game,\ this\ method\ displays\ a\ image\ to\ indicate\ that\ you\ win.\r\n\ casting\ from\ another\ class\ that\ has\ the\ image\ and\ bring\ to\ here\ when\ is\ called.\r\n
comment14.params=
comment14.target=GameManager\ getReferenceToCurrentGameManager()
comment14.text=\r\n\ Enables\ an\ instance\ of\ another\ class\ (such\ as\ Crab\ or\ Lobster)\ to\ get\ a\ reference\r\n\ to\ the\ current\ GameManager\ object\ (note\ that\ the\ return\ type\r\n\ of\ this\ method\ is\ `GameManager`)\r\n\ \r\n\ @return\ a\ reference\ to\ the\ current\ GameManager\ object\ \r\n
comment2.params=myGameManager
comment2.target=BattleField(GameManager)
comment2.text=\r\n\ This\ 1-arg\ constructor\ is\ called\ from\ the\ NfcStartScreen\ calss\r\n\ and\ allows\ access\ to\ the\ GameManager\ object\ that\ helps\r\n\ to\ maintain\ data\ from\ one\ world\ to\ the\ next\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Calls\ out\ from\ other\ void\ methods.\ In\ addition,\ it\ spawns\ the\ enemy\ count\ randomly\ along\r\n\ with\ the\ health.\r\n
comment4.params=
comment4.target=void\ prepare()
comment4.text=\r\n\ Prepares\ this\ world,\ sets\ the\ coordinates\ of\ each\ objects\ that\ that\ will\r\n\ be\ used\ in\ this\ world.\r\n
comment5.params=points
comment5.target=void\ scoring(int)
comment5.text=\r\n\ Updates\ the\ score.\ We\ can\ change\ any\ score\ from\ other\ clases\ with\ an\ value\ inside\r\n\ of\ the\ parameter.\ In\ this\ case\ if\ the\ other\ class\ is\ using\ this\ method\ and\ set\ the\ points\ \r\n\ to\ a\ different\ value,\ then\ the\ score\ will\ set\ to\ that\ value.\ Like\ scoring(20);\r\n\ \r\n\ @param\ points\ being\ used\ for\ adding\ value\r\n
comment6.params=
comment6.target=void\ showScore()
comment6.text=\r\n\ Simply\ displays\ a\ score\ on\ the\ top\ right\ corner.\ String\ concatenation\ is\ used\ but\r\n\ I\ left\ it\ blank\ since\ I\ designed\ a\ "SCORE"\ sign.\r\n
comment7.params=
comment7.target=void\ countDown()
comment7.text=\r\n\ Creates\ a\ timer,\ It\ decrement\ the\ time\ by\ 1\ with\ additional\ features\r\n\ Whenever\ the\ timer\ reaches\ to\ 205,\ it\ starts\ the\ count\ down\ beep\ to\ let\r\n\ the\ user\ know\ that\ the\ stage\ is\ almost\ done.\r\n
comment8.params=
comment8.target=void\ includeTime()
comment8.text=\r\n\ Displays\ a\ timer\ in\ the\ top\ left\ corner\r\n\ String\ concatenation\ is\ used,\ but\ left\ it\ blank\ since\ I\ designed\ the\ "TIMER"\ sign.\r\n
comment9.params=
comment9.target=void\ inOrderToWin()
comment9.text=\r\n\ This\ is\ the\ winning\ critera.\ In\ order\ to\ win\ stage\ 1,\ the\ user\ have\ to\ reach\ 400\ pts\ and\ when\ the\ time\ runs\r\n\ out.\ If\ the\ user\ did\ not\ make\ it,\ then\ it\ displays\ a\ Game\ Over\r\n
numComments=15
